==17786== Memcheck, a memory error detector
==17786== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==17786== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==17786== Command: ./pe11
==17786== Parent PID: 17785
==17786== 
--17786-- 
--17786-- Valgrind options:
--17786--    --tool=memcheck
--17786--    --verbose
--17786--    --log-file=./logfile
--17786-- Contents of /proc/version:
--17786--   Linux version 2.6.32-573.18.1.el6.x86_64 (mockbuild@x86-010.build.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-16) (GCC) ) #1 SMP Wed Jan 6 11:20:49 EST 2016
--17786-- Arch and hwcaps: AMD64, amd64-sse3-cx16-lzcnt-avx2-bmi
--17786-- Page sizes: currently 4096, max supported 4096
--17786-- Valgrind library directory: /usr/lib64/valgrind
--17786-- Reading syms from /home/shay/a/dkarakas/ece hw/PE11/PE11/pe11
--17786-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--17786--    object doesn't have a dynamic symbol table
--17786-- Reading syms from /lib64/ld-2.12.so
--17786--   Considering /usr/lib/debug/.build-id/95/9c5e10a47ee8a633e7681b64b4b9f74e242ed5.debug ..
--17786--   .. build-id is valid
--17786-- Scheduler: using generic scheduler lock implementation.
--17786-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==17786== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-17786-by-dkarakas-on-ecegrid-thin6.ecn.purdue.edu
==17786== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-17786-by-dkarakas-on-ecegrid-thin6.ecn.purdue.edu
==17786== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-17786-by-dkarakas-on-ecegrid-thin6.ecn.purdue.edu
==17786== 
==17786== TO CONTROL THIS PROCESS USING vgdb (which you probably
==17786== don't want to do, unless you know exactly what you're doing,
==17786== or are doing some strange experiment):
==17786==   /usr/lib64/valgrind/../../bin/vgdb --pid=17786 ...command...
==17786== 
==17786== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==17786==   /path/to/gdb ./pe11
==17786== and then give GDB the following command
==17786==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=17786
==17786== --pid is optional if only one valgrind process is running
==17786== 
--17786-- REDIR: 0x3a1f817c30 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--17786-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--17786-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--17786-- REDIR: 0x3a1f817a40 (index) redirected to 0x4a07c30 (index)
--17786-- REDIR: 0x3a1f817ac0 (strcmp) redirected to 0x4a08570 (strcmp)
--17786-- Reading syms from /lib64/libc-2.12.so
--17786--   Considering /usr/lib/debug/.build-id/a1/db9754d1f523a6f16ada929d6764a133dc6fa2.debug ..
--17786--   .. build-id is valid
--17786-- REDIR: 0x3a1fc84d00 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--17786-- REDIR: 0x3a1fc86fc0 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--17786-- REDIR: 0x3a1fc82c70 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--17786-- REDIR: 0x3a1fc7b920 (free) redirected to 0x4a063a9 (free)
==17786== 
==17786== HEAP SUMMARY:
==17786==     in use at exit: 0 bytes in 0 blocks
==17786==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==17786== 
==17786== All heap blocks were freed -- no leaks are possible
==17786== 
==17786== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
--17786-- 
--17786-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--17786-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==17786== 
==17786== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
